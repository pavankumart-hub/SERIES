# -*- coding: utf-8 -*-
"""STREAMLIT LSTM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eoN80OO2qR9Eyhovyf9Kc39c7xjxeHiS
"""

# streamlit_app.py
import streamlit as st
import yfinance as yf
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
from statsmodels.tsa.seasonal import STL
from sklearn.metrics import mean_squared_error

# --------------------------
# Sidebar - User Inputs
# --------------------------
st.title("ðŸ“ˆ HDFCBANK High Price Forecast using LSTM + STL")

ticker = st.text_input("Enter Ticker Symbol:", "HDFCBANK.NS")
start_date = st.date_input("Start Date:", pd.to_datetime("2020-01-01"))
end_date_forecast = st.date_input("End Date:", pd.to_datetime(datetime.today().strftime('%Y-%m-%d')))
window_size = st.slider("LSTM Window Size:", min_value=5, max_value=30, value=10)
epochs = st.slider("Training Epochs:", min_value=5, max_value=50, value=10)

st.write(f"ðŸ“… Forecasting data from {start_date} to {end_date_forecast}")

# --------------------------
# Download Data
# --------------------------
@st.cache_data
def load_data(ticker, start_date, end_date):
    data = yf.download(ticker, start=start_date, end=end_date)
    return data

data = load_data(ticker, start_date, end_date_forecast)
d_high = data["High"]

st.write(f"ðŸ“Š Showing last 5 high prices for {ticker}")
st.dataframe(d_high.tail(5))

# --------------------------
# STL Decomposition
# --------------------------
stl = STL(d_high, period=30)
result = stl.fit()
trend = result.trend
seasonal = result.seasonal
